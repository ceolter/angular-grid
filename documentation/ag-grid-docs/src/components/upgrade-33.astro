---
import { getFrameworkFromPath } from '@components/docs/utils/urlPaths';
import { urlWithPrefix } from '@utils/urlWithPrefix';
import { Icon } from '@ag-website-shared/components/icon/Icon';
import { Alert } from '@ag-website-shared/components/alert/Alert';
import Heading from '@ag-website-shared/components/heading/Heading.astro';
import Code from '@ag-website-shared/components/code/Code';

import styles from './Upgrade-33.module.scss';

const framework = getFrameworkFromPath(Astro.url.pathname);

const isJS = framework === 'javascript';
const isReact = framework === 'react';
const isAngular = framework === 'angular';
const isVue = framework === 'vue';

const moduleSelectionUrl = urlWithPrefix({framework, url: './modules/#selecting-modules'});
---
<p>Reductions in bundle size, updated theming, column header content customization</p>

<Heading level="2" id="whats-new">What's New</Heading>

<p>
    AG Grid 33 significantly reduces bundle size via modularization and enhances functionality, theming and
    accessibility as described in the <a href="https://blog.ag-grid.com/whats-new-in-ag-grid-33/">release post</a>.
    These major improvements require certain breaking changes as listed below.
</p>
<p> Please use the <a href="#codemods">codemods</a> to start your migration, then review the changes to <a
    href="#changes-to-modules">modules</a> and <a href="#theming">themes</a>. Finally, go through the list of <a
    href="#removal-of-deprecated-apis">Removals of deprecated APIs</a> to see which ones apply to your codebase.
</p>
{/* ------------------------------------------------- */}

<Heading level="2" id="changes-to-modules">Changes to Modules</Heading>
<p>
    Version 33 introduces a major change to how modules work to allow for smaller bundle sizes. Previously AG Grid
    supported two approaches - modules and packages. These have now been merged together to allow for simpler
    configuration and greater optimisation of bundle size.
</p>

{ isJS && <p>If you are using the UMD bundle, then you do not need to make any changes as all modules are automatically registered. Otherwise, see the steps below.</p> }

{/* ------------------------------------------------- */}

<Heading level="3" id="migrating-from-packages">Migrating From Packages</Heading>
        <div>
           <p> If are currently using AG Grid packages then view the Package Migration Steps. </p>
           <p>
            { isReact && <code>ag-grid-react</code>}{ isAngular && <code>ag-grid-angular</code>}{ isVue && <code>ag-grid-vue3</code>} /
            
           <code>ag-grid-community</code>  / <code>ag-grid-enterprise</code>  / <code>ag-grid-charts-enterprise</code> </p>
           <p></p>
        </div>

<details class={styles.details}>
    <summary class:list={[styles.summary, 'button-secondary']}>Package Migration Steps <Icon svgClasses={styles.summaryChevron} name="chevronRight"/></summary>

    <div class={styles.detailsInner}>
        <p>
            Previously when using packages all grid features where automatically registered. In v33, to enable tree shaking of features, you must now register the modules you are using. See <a href={urlWithPrefix({framework, url: "./modules/"})}>Modules</a> for more information.
        </p>
        <h3> AG Grid Community</h3>
        <p>To match the existing behaviour simply register the AllCommunityModule via the ModuleRegistry before any grid is created. </p>
        <p>
            <Code code={"import { ModuleRegistry, AllCommunityModules } from 'ag-grid-community';\n\nModuleRegistry.registerModules([AllCommunityModules]);"} ></Code>
        </p>
        <Alert type="info">
            <p>
                The following Enterprise modifications are all handled by v33 of the CodeMod tool.
                <p><code>npx @ag-grid-devtools/cli@33.0 migrate --from=$FROM_VERSION</code></p>
            </p>
        </Alert>
        <h3> AG Grid Enterprise</h3>
        <p>To match the existing behaviour simply register the AllEnterpriseModule via the ModuleRegistry alongside your LicenseManger. </p>
        <p>
            <Code code={"import { ModuleRegistry } from 'ag-grid-community';\nimport { AllEnterpriseModule, LicenseManager } from 'ag-grid-enterprise';\n\nLicenseManager.setLicenseKey('your License Key');\nModuleRegistry.registerModules([AllEnterpriseModule]);"} ></Code>
        </p>    

        <Heading level="3" id="migrating-integrated-charts">AG Charts Integrated / Sparklines </Heading>
        <p>
            AG Grid Enterprise no longer includes AG Charts as part of its distribution. If you are using either Integrated Charts or Sparklines, you must now install either <code>ag-charts-community</code> or <code>ag-charts-enterprise</code> and register the relevant module as follows. 
        </p>
        <p>
            If you are currently using AG Charts Community via <code>ag-grid-enterprise</code> then the equivalent code is:
        </p>
        <p>
            <Code code={`import { ModuleRegistry } from 'ag-grid-community';
import { AllEnterpriseModule, LicenseManager } from 'ag-grid-enterprise';
import { AgChartsCommunityModule } from 'ag-charts-community';

LicenseManager.setLicenseKey('your License Key');
ModuleRegistry.registerModules([
    AllEnterpriseModule.with(AgChartsCommunityModule)
]);`} ></Code>
        </p>
        <p>
            If you are currently using AG Charts Enterprise via <code>ag-grid-charts-enterprise</code> then this package is replaced by <code>ag-grid-enterprise</code> and <code> ag-charts-enterprise</code> the equivalent code is:
        </p>
        <p>
            <Code language={'diff'} code={
            `"dependencies": {
-   "ag-grid-charts-enterprise": "^32.3.0",
+   "ag-grid-enterprise": "^33.0.0",
+   "ag-charts-enterprise": "^11.0.0",
}
`} ></Code>
            <Code code={`import { ModuleRegistry } from 'ag-grid-community';
import { AllEnterpriseModule, LicenseManager } from 'ag-grid-enterprise';
import { AgChartsEnterpriseModule } from 'ag-charts-enterprise';

LicenseManager.setLicenseKey('your License Key');
ModuleRegistry.registerModules([
    AllEnterpriseModule.with(AgChartsEnterpriseModule)
]);`} ></Code>
        </p>

        <p>
            For more information about modules see the <a href={urlWithPrefix({framework, url: "./modules/"})}>Modules</a> page for help on selecting modules, as well as more
            information
            on how to register modules (including registering different modules for different grid instances).
        </p>
        
    </div>
</details>


{/* ------------------------------------------------- */}

<Heading level="3" id="migrating-from-modules">Migrating From Modules</Heading>
        <div>
           <p> If are currently using AG Grid modules then view the Module Migration Steps. </p>
           <p>
            { isReact && <code>@ag-grid-community/react</code>}{ isAngular && <code>@ag-grid-community/angular</code>}{ isVue && <code>@ag-grid-community/vue3</code>} /
            
           <code>@ag-grid-community/**</code>  / <code>@ag-grid-enterprise/**</code></p>
           <p></p>
        </div>

<details class={styles.details}>
    <summary class:list={[styles.summary, 'button-secondary']}>Module Migration Steps <Icon svgClasses={styles.summaryChevron} name="chevronRight"/></summary>

    <div class={styles.detailsInner}>

        <p>
            All NPM packages for the modules version of AG Grid, e.g <code>@ag-grid-community/core</code> have been merged together into either <code>ag-grid-community</code> or <code>ag-grid-enterprise</code> as follows:
        </p>
        <ul>
            { isReact && <li><code>@ag-grid-community/react</code> is replaced with <code>ag-grid-react</code></li>}
            { isAngular && <li><code>@ag-grid-community/angular</code> is replaced with <code>ag-grid-angular</code></li>}
            { isVue && <li><code>@ag-grid-community/vue3</code> is replaced with <code>ag-grid-vue3</code></li>}
            <li>All <code>@ag-grid-community/**</code> packages are replaced with <code>ag-grid-community</code> 
            <ul>
                <li><p>Apart from <code>@ag-grid-community/locale</code> which remains unchanged.</p></li>
            </ul>
            </li>
            <li>All <code>@ag-grid-enterprise/**</code> packages are replaced with <code>ag-grid-enterprise</code>.</li>
        </ul>

        <h3>Update package.json</h3>
        <p>Update your <code>package.json</code> to reflect the new package names like in this example. </p>
        <Code language={'diff'} code={
`"dependencies": {
-${isReact ? '    "@ag-grid-community/react": "^32.3.0",' : ''}${isAngular ? '    "@ag-grid-community/angular": "^32.3.0",' : ''}${isVue ? '    "@ag-grid-community/vue3": "^32.3.0",' : ''}
-    "@ag-grid-community/client-side-row-model": "^32.3.0",
-    "@ag-grid-enterprise/clipboard": "^32.3.0",
-    "@ag-grid-community/locale": "^32.3.0",
+${isReact ? '    "ag-grid-react": "^33.0.0",' : ''}${isAngular ? '    "ag-grid-angular": "^33.0.0",' : ''}${isVue ? '    "ag-grid-vue3": "^33.0.0",' : ''}
+    "ag-grid-community": "^33.0.0",
+    "ag-grid-enterprise": "^33.0.0",
+    "@ag-grid-community/locale": "^33.0.0"
}`} ></Code>
        <Alert type="info">
            <p>
                We strongly recommend using v33 of the CodeMod as it will update all your import paths and update your module registration to ensure backwards compatibility.
                <p><code>npx @ag-grid-devtools/cli@33.0 migrate --from=$FROM_VERSION</code></p>
            </p>
        </Alert>
        
        <p>
            To take full advantage of the new modules you can use the <a href={moduleSelectionUrl}>Module Selector</a> tool to work out which
            modules you require.
        </p>
        <h3> Validation Module</h3>
        <p>
            To help identify missing modules and configuration issues at development time, we recommend including the <code>ValidationModule</code> in your development
            build. This will provide helpful details on missing modules for a particular feature. This is provided as a separate module so that it can be excluded from production builds saving even more bundle size. It is included in the <code>AllCommunityModule</code>.
        </p>

        <h3> Changes to Existing Modules</h3>

        <p>The following changes have been made to existing modules to ensure that each feature only includes the minimal code required for that feature:</p>
        <ul>
            <li><code>ColumnsToolPanelModule</code> - no longer imports the <code>RowGroupingModule</code></li>
            <li><code>ExcelExportModule</code> - no longer imports the <code>CsvExportModule</code></li>
            <li>
                <code>MenuModule</code> - split into <code>ColumnMenuModule</code> for the Column Menu, and
                <code>ContextMenuModule</code> for the Context Menu.
            </li>
            <li><code>RangeSelectionModule</code> - replaced with <code>CellSelectionModule</code>.</li>
            <li>
                <code>RowGroupingModule</code> - split into several modules.
                <ul>
                    <li><code>RowGroupingModule</code> - Row Grouping only </li>
                    <li><code>TreeDataModule</code> - Tree Data</li>
                    <li><code>PivotModule</code> - Pivoting</li>
                    <li><code>RowGroupingPanelModule</code> - Row Grouping Panel / Pivot Panel</li>
                    <li><code>GroupFilterModule</code> - Group Filter</li>
                </ul>
            </li>
            <li>
                <code>GridChartsModule</code> - replaced with <code>IntegratedChartsModule</code> and requires AG Charts module to be registered.
            </li>
            <li>
                <code>SparklinesModule</code> - requires AG Charts module to be registered.
            </li>
        </ul>

        <Heading level="3" id="migrating-integrated-charts">AG Charts Integrated / Sparklines </Heading>
        <p>
            If you are using either Integrated Charts or Sparklines, you must now install either <code>ag-charts-community</code> or <code>ag-charts-enterprise</code> and register the relevant module as follows. 
        </p>
        <p>
            If you are currently using AG Chart Community via <code>@ag-grid-enterprise/charts</code> then the equivalent code is:
        </p>
        <p>
<Code language={'diff'} code={
`"dependencies": {
-    "@ag-grid-enterprise/charts": "^32.3.0",
+    "ag-grid-enterprise": "^33.0.0",
+    "ag-charts-community": "^11.0.0"
}`} ></Code>
            <Code code={"import { ModuleRegistry } from 'ag-grid-community';\nimport { IntegratedChartsModule } from 'ag-grid-enterprise';\nimport { AgChartsCommunityModule } from 'ag-charts-community';\n\nModuleRegistry.registerModules([\n\tIntegratedChartsModule.with(AgChartsCommunityModule),\n]);"} ></Code>
        </p>
        <p>
            If you are currently using AG Charts Enterprise via <code>@ag-grid-enterprise/charts-enterprise</code> then the equivalent code is:
        </p>
        <p>
<Code language={'diff'} code={
`"dependencies": {
-    "@ag-grid-enterprise/charts-enterprise": "^32.3.0",
+    "ag-grid-enterprise": "^33.0.0",
+    "ag-charts-enterprise": "^11.0.0"
}`} ></Code>
            <Code code={"import { ModuleRegistry } from 'ag-grid-community';\nimport { IntegratedChartsModule } from 'ag-grid-enterprise';\nimport { AgChartsEnterpriseModule } from 'ag-charts-enterprise';\n\nModuleRegistry.registerModules([\n\tIntegratedChartsModule.with(AgChartsEnterpriseModule)\n]);"} ></Code>
        </p>
        <p>
            If you are currently using Sparklines via <code>@ag-grid-enterprise/sparklines</code> then the equivalent code is:
        </p>
        <p>
            <Code code={"import { ModuleRegistry } from 'ag-grid-community';\nimport { SparklinesModule } from 'ag-grid-enterprise';\nimport { AgChartsCommunityModule } from 'ag-charts-community';\n\nModuleRegistry.registerModules([\n\tSparklinesModule.with(AgChartsCommunityModule),\n]);"} ></Code>
        </p>
        
        <h3> Optimizing Bundle Size</h3>
        <p>
            The Codemod tool is designed to match the existing behaviour of your application. However, to take full advantage of the new modules you may wish to use the <a href={urlWithPrefix({framework, url: "./modules/"})}>Module Selector</a> tool to work out which modules you require.
            </p>

        <p>
            You will also find information on alternative ways to register modules (including registering different modules for different grid instances).
        </p>
        
    </div>
</details>


{/* ------------------------------------------------- */}

<Heading level="2" id="codemods">Codemods</Heading>
<p>Follow these steps to upgrade your project's AG Grid version to <code>33.0.0</code>:</p>

<ol>
    <li>
        <p>
            Locate your project's <code>package.json</code> and note the version of AG Grid that you are currently
            using.
        </p>
    </li>
    <li>
        <p>Update any AG Grid dependencies listed in the <code>package.json</code> to version <code>33.0.0</code>.</p>
    </li>
    <li>
        <p>Open a terminal and navigate to your project's root folder.</p>
    </li>
    <li>
        <p>
            Run the <code>migrate</code> command of version <code>33.0</code> of the AG Grid codemod runner, where
            <code>$FROM_VERSION</code> refers to your project's existing AG Grid version:
        </p>
        <pre class="code language-jsx"><code>npx @ag<span class="token operator">-</span>grid<span class="token operator">-</span>devtools<span class="token operator">/</span>cli@<span class="token number">33.0</span> migrate <span class="token operator">--</span>from<span class="token operator">=</span>$<span class="token constant">FROM_VERSION</span>
</code></pre>
        <p>This will update your project's source files to prepare for the new release.</p>
        <p>
            By default the Codemod runner will locate all source files within the current directory. For projects with
            more specific requirements, pass a list of input files to the <code>migrate</code> command, or specify the
            <code>--help</code> argument to see more fine-grained usage instructions.
        </p>
    </li>
</ol>

<Alert type="info">
    <p>
        The Codemod runner will check the state of your project to ensure that you don't lose any work. If you would
        rather see a diff of the changes instead of applying them, pass the <code>--dry-run</code> argument.
    </p>
</Alert>

<p>
    The codemod only transforms source files that make use of deprecated features, so if you aren't currently making use
    of any of those APIs your source code will be unaffected by the codemod.
</p>

<p>See the <a href={{ framework, url: "./codemods/"}}>Codemods</a> documentation for more details.</p>

{/* ------------------------------------------------- */}

<Heading level="2" id="breaking-changes">Breaking Changes</Heading>
        <div
    data-meta='["ag-grid-enterprise","ag-charts-community","ag-charts-enterprise","IntegratedChartsModule","GridChartsModule","AgChartsCommunityModule","AgChartsEnterpriseModule","RowDragModule","getMainMenuItems","getContextMenuItems","mainMenuItems","contextMenuItems","chartMenuItems","columnGroup","navigator","api.getRowDropZoneParams","Grid","createGrid","selectAll","deselectAll","getFirstDisplayedRow","getLastDisplayedRow","getModel","getValue","getCellValue","showColumnMenuAfterButtonClick","showColumnMenuAfterMouseClick","IHeaderParams","autoSizeColumn","autoSizeColumns","setColumnWidths","moveColumn","moveColumns","addAggFunc","addAggFuncs","removeValueColumn","removeValueColumns","addValueColumn","addValueColumns","removeRowGroupColumn","removeRowGroupColumns","addRowGroupColumn","addRowGroupColumns","removePivotColumn","removePivotColumns","addPivotColumn","addPivotColumns","setColumnVisible","setColumnsVisible","setColumnPinned","setColumnsPinned","getColumnFilterModel","setColumnFilterModel","getServerSideGroupLevelParams","cellFlashDuration","enableCellChangeFlash","suppressGroupMaintainValueType","groupTotalRow","grandTotalRow","columnChooserParams","suppressHeaderMenuBut"RowDragEvent","vDirection","suppressFilterButton","colDef.suppressFloatingFilterButton","textCustomComparator","textMatcher","onParamsUpdated","refresh","valueGetter","getValue","footerValueGetter","totalValueGetter","flashDuration","fadeDuration","IToolPanelColumnCompParams","verticalText","charSet",,"name","sparklineOptions.label.placement"]'
></div>

<details class={styles.details}>
    <summary class:list={[styles.summary, 'button-secondary']}>Breaking Changes <Icon svgClasses={styles.summaryChevron} name="chevronRight"/></summary>

    <div class={styles.detailsInner}>
        <p>This release includes the following breaking changes:</p>

        <Heading level="3" id="packaging"> NPM Packages</Heading>
        <p><code>ag-grid-enterprise</code> no longer includes <code>ag-charts-community</code> as a dependency. Also,
            the
            package <code>ag-grid-charts-enterprise</code> is no longer published.</p>
        <p>For Integrated Charts and Sparklines, the application must now explicitly include either
            <code>ag-charts-community</code> or <code>ag-charts-enterprise</code> in its <code>package.json</code> and
            register
            the module <code>AgChartsCommunityModule</code> or <code>AgChartsEnterpriseModule</code> as follows:
        </p>
        <p>The <code>GridChartsModule</code> has been replaced by the <code>IntegratedChartsModule</code>.</p>
        <pre class="code language-jsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> AgChartsEnterpriseModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'ag-charts-enterprise'</span><span class="token punctuation">;</span>
        <span class="token keyword">import</span> <span class="token punctuation">{</span> ModuleRegistry <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'ag-grid-community'</span><span class="token punctuation">;</span>
        <span class="token keyword">import</span> <span class="token punctuation">{</span> IntegratedChartsModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'ag-grid-enterprise'</span><span class="token punctuation">;</span>

        ModuleRegistry<span class="token punctuation">.</span><span class="token function">registerModules</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
            IntegratedChartsModule<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>AgChartsEnterpriseModule<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// sparklines</span>
            SparklinesModule<span class="token punctuation">.</span><span class="token function">with</span><span class="token punctuation">(</span>AgChartsEnterpriseModule<span class="token punctuation">)</span>
        <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        </code></pre>

        <Heading level="3" id="property-value-coercion">Property Value Coercion</Heading>
        <p>For non-TS users and users who use TS but avoid type validation there's changes in property value coercion:
        </p>

        { isAngular && <p>For boolean values provided as strings, all string values except “false” are truthy - only “false” will be false, any other spelling such as “FALSE” will be treated as true.</p> }
        { !isAngular && <p>For boolean values provided as strings, “false” is no longer converted to false anymore - all string values are truthy.</p> }

        { isReact && <div>
            <Heading level="3" id="react">React</Heading>
            <ul>
                <li><code>AgReactUiProps</code> removed, please use <code>AgGridReactProps</code> instead.</li>
                <li><code>AgGridReactProps</code>:<ul>
                        <li><code>disableStaticMarkup</code> no longer used.</li>
                        <li><code>legacyComponentRendering</code> no longer used.</li>
                    </ul>
                </li>
                <li><code>AgReactComponent</code>:<ul>
                        <li><code>getReactContainerStyle</code> removed, apply styling directly to
                            <code>ag-react-container</code>
                            if needed. -<code>getReactContainerClasses</code> removed, apply styling directly to
                            <code>ag-react-container</code> if needed.
                        </li>
                        <li><code>IHeaderGroupReactComp</code> removed, please use <code>IHeaderGroup</code> instead.</li>
                        <li><code>IHeaderReactComp</code> removed, please use <code>IHeader</code> instead.</li>
                        <li><code>IDateReactComp</code> removed, please use <code>IDate</code> instead.</li>
                        <li><code>IFilterReactComp</code> removed, please use <code>IFilter</code> instead.</li>
                        <li><code>IFloatingFilterReactComp</code> removed, please use <code>IFloatingFilter</code> instead.
                        </li>
                        <li><code>ICellRendererReactComp</code> removed, please use <code>ICellRenderer</code> instead.</li>
                        <li><code>ICellEditorReactComp</code> removed, please use <code>ICellEditor</code> instead.</li>
                        <li><code>ILoadingCellRendererReactComp</code> removed, no interface required.</li>
                        <li><code>ILoadingOverlayReactComp</code> removed, please use <code>ILoadingOverlay</code> instead.
                        </li>
                        <li><code>INoRowsOverlayReactComp</code> removed, please use <code>INoRowsOverlay</code> instead.
                        </li>
                        <li><code>IStatusPanelReactComp</code> removed, please use <code>IStatusPanel</code> instead.</li>
                        <li><code>IToolPanelReactComp</code> removed, please use <code>IToolPanel</code> instead.</li>
                        <li><code>ITooltipReactComp</code> removed, no interface required.</li>
                    </ul>
                </li>
            </ul>
        </div> }

        { isAngular && <div>
            <Heading level="3" id="angular-minimum-version">Angular Minimum Version</Heading>
            <p>The minimum Angular version supported is now Angular 17. Please upgrade to Angular 17 to use this AG Grid version.</p>
        </div> }


        { isVue && <div>
            <Heading level="3" id="vue-minimum-version">Vue Minimum Version</Heading>
            <p>The minimum Vue version supported is now Vue 3.5. Please upgrade to Vue 3.5 or later to use this AG Grid version.</p>
        </div>}

        <Heading level="3" id="theming">Theming</Heading>
        <p>The Theming API is now the default theming method of the grid. Because of this, setting the theme via a theme
            class
            (<code>class="ag-theme-quartz"</code>) on the parent element of the grid is no longer supported.
            Applications using
            CSS file-based themes must either pass a theme object to the theme grid option or the string
            <code>"legacy"</code>
            to keep using class name-based themes. This is documented in the <a
                href={urlWithPrefix({framework, url: './theming-migration/'})}>Theming API Migration Guide</a>.</p>

        <Heading level="3" id="custom-icons">Custom Icons</Heading>
        <p>Setting any of the custom icons listed below will have the provided custom icon only apply in the specific
            use case
            its name indicates, instead of all cases as before. To have the custom icon apply to additional cases, set
            the
            additional icon keys pointing to the same custom icon. See list of icons changed:</p>
        <ul>
            <li>
                <p><code>smallDown</code> (deprecated):</p>
                <ul>
                    <li><code>advancedFilterBuilderSelect</code> for Advanced Filter Builder dropdown</li>
                    <li><code>selectOpen</code> for Select cell editor and dropdowns (e.g., Integrated Charts menu)</li>
                    <li><code>richSelectOpen</code> for Rich Select cell editor</li>
                </ul>
            </li>
            <li>
                <p><code>smallLeft</code> (deprecated):</p>
                <ul>
                    <li><code>panelDelimiterRtl</code> for Row Group Panel / Pivot Panel</li>
                    <li><code>subMenuOpenRtl</code> for sub-menus</li>
                </ul>
            </li>
            <li>
                <p><code>smallRight</code> (deprecated):</p>
                <ul>
                    <li><code>panelDelimiter</code> for Row Group Panel / Pivot Panel</li>
                    <li><code>subMenuOpen</code> for sub-menus</li>
                </ul>
            </li>
            <li>
                <p><code>previous</code>:</p>
                <ul>
                    <li><code>previous</code> for pagination</li>
                    <li><code>chartsThemePrevious</code> for Integrated Charts theme picker</li>
                </ul>
            </li>
            <li>
                <p><code>next</code>:</p>
                <ul>
                    <li><code>next</code> for pagination</li>
                    <li><code>chartsThemeNext</code> for Integrated Charts theme picker</li>
                </ul>
            </li>
            <li>
                <p><code>cancel</code>:</p>
                <ul>
                    <li><code>cancel</code> for column drag pills</li>
                    <li><code>richSelectRemove</code> for Rich Select cell editor pills</li>
                </ul>
            </li>
            <li>
                <p><code>menu</code>:</p>
                <ul>
                    <li><code>menu</code> for button to launch the legacy column menu</li>
                    <li><code>legacyMenu</code> for legacy column menu tab header</li>
                </ul>
            </li>
            <li>
                <p><code>menuAlt</code>:</p>
                <ul>
                    <li><code>menuAlt</code> for new column menu</li>
                    <li><code>chartsMenu</code> for Integrated Charts menu</li>
                </ul>
            </li>
            <li>
                <p><code>columns</code>:</p>
                <ul>
                    <li><code>columns</code> for the column menu/column chooser</li>
                    <li><code>columnsToolPanel</code> for the Columns Tool Panel tab icon</li>
                </ul>
            </li>
            <li>
                <p><code>filter</code>:</p>
                <ul>
                    <li><code>filter</code> for buttons that open the filter (header/menu)</li>
                    <li><code>filtersToolPanel</code> for the Filters Tool Panel tab icon</li>
                    <li><code>filterActive</code> for displaying the filter is active (header with legacy column menu,
                        Filters
                        Tool Panel item)</li>
                    <li><code>filterTab</code> for the filter tab of the legacy tabbed column menu</li>
                </ul>
            </li>
            <li>
                <p><code>save</code>:</p>
                <ul>
                    <li><code>save</code> for the export menu</li>
                    <li><code>chartsDownload</code> for Integrated Charts download</li>
                </ul>
            </li>
            <li>
                <p><code>columnSelectClosed</code>:</p>
                <ul>
                    <li><code>columnSelectClosed</code> for the Columns Tool Panel/Column Chooser/column tab in the
                        legacy
                        tabbed column menu</li>
                    <li><code>accordionClosed</code> for accordions (Filters Tool Panel, Integrated Charts tool panels)
                    </li>
                </ul>
            </li>
            <li>
                <p><code>columnSelectOpen</code>:</p>
                <ul>
                    <li><code>columnSelectOpen</code> for the Columns Tool Panel/Column Chooser/column tab in the legacy
                        tabbed
                        column menu</li>
                    <li><code>accordionOpen</code> for accordions (Filters Tool Panel, Integrated Charts tool panels)
                    </li>
                </ul>
            </li>
            <li>
                <p><code>columnSelectIndeterminate</code>:</p>
                <ul>
                    <li><code>columnSelectIndeterminate</code> for the Columns Tool Panel/Column Chooser/column tab in
                        the
                        legacy tabbed column menu</li>
                    <li><code>accordionIndeterminate</code> for accordions (Filters Tool Panel, Integrated Charts tool
                        panels)
                    </li>
                </ul>
            </li>
        </ul>

        <Heading level="3" id="server-side-rendering">Server-side Rendering</Heading>
        <p>AG Grid no longer patches global properties that are not present in a Server environment, i.e HTMLElement and
            others.
            If possible you should avoid rendering AG Grid on the server as this is not supported.</p>

        <Heading level="3" id="typing">Stricter Types</Heading>
        <p>The following properties are now strictly typed to only their valid values instead of <code>string</code>:</p>
        <ul>
            <li>gridOption - <code>chartMenuItems</code>
            <li>gridOption - <code>getMainMenuItems</code> and <code>getContextMenuItems</code> including the <code>defaultItems</code> parameter in the callback</li>
                </li>   
                <li>columnDefs - <code>mainMenuItems</code> and <code>contextMenuItems</code>
                </li> 
                

        </ul>

        <Heading level="3" id="typing">Column Menu</Heading>
        <p>The column property is now optional in the callback to get column menu items (in the grid option
            <code>getMainMenuItems</code> or <code>colDef.mainMenuItems</code>). <code>column</code> will be null
            when a
            column group header or empty column space is right-cpcked on. A new property <code>columnGroup</code>
            will be
            provided when a column group header is right-clicked on.
        </p>


        <Heading level="3" id="modules-1">Modules</Heading>
        <p><code>api.getRowDropZoneParams()</code> returns undefined if the <code>RowDragModule</code> is not
            registered.</p>

        <Heading level="3" id="server-side-row-model">Server-side Row Model</Heading>
        <p>Server-side Row Model full store (activated by <code>suppressServerSideInfiniteScroll</code> property) is now
            removed. Please use the standard server-side row model functionality as documented.</p>

        <Heading level="3" id="floating-filters">Floating Filters</Heading>
        <p>Floating filters provided via the <code>colDef.filter</code> values <code>text</code>, <code>number</code>,
            <code>date</code>, <code>set</code>, <code>multi</code>, and <code>group</code> no longer work. Use the
            values
            <code>agTextColumnFilter</code>, <code>agNumberColumnFilter</code>, <code>agDateColumnFilter</code>,
            <code>agSetColumnFilter</code>, <code>agMultiColumnFilter</code>, and <code>agGroupColumnFilter</code>
            instead.
        </p>

        <Heading level="3" id="column-state">Column State</Heading>
        <p>Column state properties in the column definition are no longer parsed to number/boolean. Provide the correct
            types
            instead of strings.</p>

        <Heading level="3" id="grid-state">Grid State</Heading>
        <p>Grid state <code>colId ag-Grid-ControlsColumn</code> is now named <code>ag-Grid-SelectionColumn</code>.
            Restoring
            grid state with the old <code>colId</code> will have no effect.</p>

        <Heading level="3" id="integrated-charts"> Integrated Charts</Heading>
        <p><code>navigator</code> is removed from <code>ChartFormatPanelGroup</code>. Navigator setting is now part of the Integrated Charts Advanced Settings.</p>

        <Heading level="3" id="sparklines">Sparklines</Heading>
        <ul>
            <li><code>type: 'column'</code> - removed, use <code>type: 'bar'</code> and
                <code>direction: 'vertical'</code>
                instead.</li>
            <li><code>tooltip.renderer</code> no longer returns tooltip font colour and opacity - use CSS instead.</li>
            <li><code>tooltip.xOffset / tooltip.yOffset</code> - removed, use CSS instead.</li>
            <li><code>tooltip.container</code> - removed, AG Charts now handles this.</li>
            <li><code>marker.formatter</code> - removed, use <code>marker.itemStyler</code> instead.</li>
            <li><code>sparklineOptions.[line, area, bar, column]</code> to apply styles - removed, use
                <code>sparklineOptions</code> properties instead.
            </li>
            <li><code>highlightStyle</code> now follows the AG Charts options - for more customisation options use an
                <code>itemStyler</code> instead.
            </li>
            <li><code>sparklineOptions.valueAxisDomain</code> - removed, use <code>sparklineOptions.min/max</code>
                instead.</li>
            <li><code>sparklineOptions.paddingInner / sparklineOptions.paddingOuter</code> - removed, use
                <code>sparklineOptions.axis.paddingInner / sparklineOptions.axis.paddingOuter</code> instead.
            </li>
            <li><code>sparklineOptions.container</code> - removed.</li>
            <li><code>sparklineOptions.label.placement</code> - updated to use <a
                    href="https://www.ag-grid.com/charts/javascript/bar-series/#reference-AgBarSeriesOptions-label-placement">AG
                    Charts Label Placement</a>. Instead of <code>insideBase</code>, <code>center</code>,
                <code>insideEnd</code>
                and <code>outsideEnd</code>, please use <code>inside-center</code>, <code>inside-start</code>,
                <code>inside-end</code> or <code>outside-end</code>
            </li>
        </ul>
    </div>
</details>

{/* ------------------------------------------------- */}

<Heading level="2" id="removal-of-deprecated-apis">Removal of Deprecated APIs</Heading>

<details class={styles.details}>
    <summary class:list={[styles.summary, 'button-secondary' ]}>Removed Deprecated APIs
        <Icon svgClasses={styles.summaryChevron} name="chevronRight" />
    </summary>

    <div class={styles.detailsInner}>
        <Heading level="3" id="grid-api-1">Grid API</Heading>
        <div
            data-meta='[&amp;quot;Grid&amp;quot;,&amp;quot;api&amp;quot;,&amp;quot;selectAll&amp;quot;,&amp;quot;deselectAll&amp;quot;,&amp;quot;getFirstDisplayedRow&amp;quot;,&amp;quot;getLastDisplayedRow&amp;quot;,&amp;quot;getModel&amp;quot;,&amp;quot;getValue&amp;quot;,&amp;quot;showColumnMenuAfterButtonClick&amp;quot;,&amp;quot;showColumnMenuAfterMouseClick&amp;quot;,&amp;quot;autoSizeColumn&amp;quot;,&amp;quot;setColumnWidths&amp;quot;,&amp;quot;moveColumn&amp;quot;,&amp;quot;addAggFunc&amp;quot;,&amp;quot;removeValueColumn&amp;quot;,&amp;quot;addValueColumn&amp;quot;,&amp;quot;removeRowGroupColumn&amp;quot;,&amp;quot;addRowGroupColumn&amp;quot;,&amp;quot;removePivotColumn&amp;quot;,&amp;quot;addPivotColumn&amp;quot;,&amp;quot;setColumnVisible&amp;quot;,&amp;quot;setColumnPinned&amp;quot;]'>
        </div>
        <ul>
            <li><code>new Grid()</code> - removed, use <code>createGrid</code> instead.</li>
            <li><code>api</code> - no longer mutated onto the provided <code>gridOptions</code> for Javascript users.
            </li>
            <li>First argument of <code>selectAll</code> and <code>deselectAll</code> grid API methods is now the
                selection
                mode, the event source is now the second argument. Both are optional.</li>
            <li><code>getFirstDisplayedRow</code> - removed, use <code>getFirstDisplayedRowIndex</code> instead.</li>
            <li><code>getLastDisplayedRow</code> - removed, use <code>getLastDisplayedRowIndex</code> instead.</li>
            <li><code>getModel()</code> - removed, use the appropriate grid API methods instead.</li>
            <li><code>getValue</code> - removed, use <code>getCellValue</code> instead.</li>
            <li><code>showColumnMenuAfterButtonClick</code> - removed, use <code>IHeaderParams.showColumnMenu</code>
                within a
                header component, or <code>api.showColumnMenu</code> elsewhere.</li>
            <li><code>showColumnMenuAfterMouseClick</code> - removed, use
                <code>IHeaderParams.showColumnMenuAfterMouseClick</code> within a header component, or
                <code>api.showColumnMenu</code> elsewhere.
            </li>
            <li><code>autoSizeColumn(key)</code> - removed, please use <code>autoSizeColumns([colKey])</code> instead.
            </li>
            <li><code>setColumnWidths(key, newWidth)</code> - removed, please use
                <code>{`setColumnWidths([{key: newWidth}])`}</code> instead.
            </li>
            <li><code>moveColumn(key, toIndex)</code> - removed, please use <code>moveColumns([key], toIndex)</code>
                instead.
            </li>
            <li><code>addAggFunc(key, func)</code> - removed, please use <code>{`addAggFuncs({ key: func })`}</code>
                instead.</li>
            <li><code>removeValueColumn(colKey)</code> - removed, please use <code>removeValueColumns([colKey])</code>
                instead.
            </li>
            <li><code>addValueColumn(colKey)</code> - removed, please use <code>addValueColumns([colKey])</code>
                instead.</li>
            <li><code>removeRowGroupColumn(colKey)</code> - removed, please use
                <code>removeRowGroupColumns([colKey])</code>
                instead.</li>
            <li><code>addRowGroupColumn(colKey)</code> - removed, please use <code>addRowGroupColumns([colKey])</code>
                instead.
            </li>
            <li><code>removePivotColumn(colKey)</code> - removed, please use <code>removePivotColumns([colKey])</code>
                instead.
            </li>
            <li><code>addPivotColumn(colKey)</code> - removed, please use <code>addPivotColumns([colKey])</code>
                instead.</li>
            <li><code>setColumnVisible(key, visible)</code> - removed, please use
                <code>setColumnsVisible([key], visible)</code>
                instead.</li>
            <li><code>setColumnPinned(key, pinned)</code> - removed, please use
                <code>setColumnsPinned([key], pinned)</code>
                instead.</li>
            <li>To get/set individual filter models, use <code>getColumnFilterModel</code> or
                <code>setColumnFilterModel</code>
                instead.</li>
        </ul>



        <Heading level="3" id="grid-options-1"> Grid Options</Heading>
        <div
            data-meta='[&amp;quot;suppressServerSideInfiniteScroll&amp;quot;,&amp;quot;getServerSideGroupLevelParams&amp;quot;,&amp;quot;advancedFilterModel&amp;quot;,&amp;quot;suppressAsyncEvents&amp;quot;,&amp;quot;cellFlashDelay&amp;quot;,&amp;quot;cellFadeDelay&amp;quot;,&amp;quot;enableCellChangeFlash&amp;quot;,&amp;quot;suppressGroupMaintainValueType&amp;quot;,&amp;quot;groupIncludeFooter&amp;quot;,&amp;quot;groupIncludeTotalFooter&amp;quot;,&amp;quot;serverSideSortOnServer&amp;quot;,&amp;quot;serverSideFilterOnServer&amp;quot;,&amp;quot;tabToNextCell&amp;quot;,&amp;quot;tabToNextHeader&amp;quot;]'>
        </div>
        <ul>
            <li><code>suppressServerSideInfiniteScroll</code> - removed without replacement.</li>
            <li>Interface <code>getServerSideGroupLevelParams</code> - <code>suppressInfiniteScroll</code> property
                removed
                without replacement.</li>
            <li><code>advancedFilterModel</code> - removed, please use
                <code>initialState.filter.advancedFilterModel</code>
                instead.</li>
            <li><code>suppressAsyncEvents</code> - removed, Events should be handled asynchronously.</li>
            <li><code>cellFlashDelay</code> - removed, please use <code>cellFlashDuration</code> instead.</li>
            <li><code>cellFadeDelay</code> - removed, please use <code>cellFadeDuration</code> instead.</li>
            <li><code>enableCellChangeFlash</code> - removed, set <code>enableCellChangeFlash</code> in the
                <code>ColDef</code> or <code>defaultColDef</code> for all columns.
            </li>
            <li><code>suppressGroupMaintainValueType</code> - removed.</li>
            <li><code>groupIncludeFooter</code> - removed, please use <code>groupTotalRow</code> instead.</li>
            <li><code>groupIncludeTotalFooter</code> - removed, please use <code>grandTotalRow</code> instead.</li>
            <li><code>serverSideSortOnServer</code> - removed.</li>
            <li><code>serverSideFilterOnServer</code> - removed.</li>
            <li><code>tabToNextCell</code> returning <code>null</code> - removed.</li>
            <li><code>tabToNextHeader</code> returning <code>null</code> - removed.</li>
        </ul>

        <Heading level="3" id="coldef"> ColDef</Heading>
        <div
            data-meta='[&amp;quot;suppressCellFlash&amp;quot;,&amp;quot;columnsMenuParams&amp;quot;,&amp;quot;suppressMenu&amp;quot;]'>
        </div>
        <ul>
            <li><code>suppressCellFlash</code> - removed, please use <code>enableCellChangeFlash: false</code> in the
                <code>ColDef</code>.
            </li>
            <li><code>columnsMenuParams</code> - removed, please use <code>columnChooserParams</code> instead.</li>
            <li><code>suppressMenu</code> - removed, please use <code>suppressHeaderMenuButton</code> instead.</li>
        </ul>

        <Heading level="3" id="interfaces"> Interfaces</Heading>
        <div
            data-meta='[&amp;quot;vDirection&amp;quot;,&amp;quot;suppressFilterButton&amp;quot;,&amp;quot;textCustomComparator&amp;quot;,&amp;quot;onParamsUpdated&amp;quot;,&amp;quot;valueGetter&amp;quot;,&amp;quot;footerValueGetter&amp;quot;,&amp;quot;flashDelay&amp;quot;,&amp;quot;fadeDelay&amp;quot;,&amp;quot;ToolPanelColumnCompParams&amp;quot;,&amp;quot;verticalText&amp;quot;,&amp;quot;charSet&amp;quot;,&amp;quot;name&amp;quot;]'>
        </div>
        <ul>
            <li><code>RowDragEvent</code> interface: <code>vDirection</code> property is now typed as
                <code>'up' | 'down' | null</code>.
            </li>
            <li><code>IFloatingFilterParams</code>: <code>suppressFilterButton</code> - removed, please use
                <code>colDef.suppressFloatingFilterButton</code> instead.
            </li>
            <li><code>ITextFilterParams</code>: <code>textCustomComparator</code> - removed, please use
                <code>textMatcher</code>
                instead.</li>
            <li><code>IFloatingFilter</code>: <code>onParamsUpdated</code> - removed, please use <code>refresh</code>
                instead.
            </li>
            <li><code>IFilterParams</code>: <code>valueGetter</code> - removed, please use <code>getValue</code>
                instead.</li>
            <li><code>IDate</code>: <code>onParamsUpdated</code> - removed, please use <code>refresh</code> instead.
            </li>
            <li><code>IGroupCellRendererParams</code>: <code>footerValueGetter</code> - removed, please use
                <code>totalValueGetter</code> instead.
            </li>
            <li><code>FlashCellsParams</code>:<ul>
                    <li><code>flashDelay</code> - removed, please use <code>flashDuration</code> instead.</li>
                    <li><code>fadeDelay</code> - removed, please use <code>fadeDuration</code> instead.</li>
                </ul>
            </li>
            <li><code>ToolPanelColumnCompParams</code>: <code>ToolPanelColumnCompParams</code> - removed, please use
                <code>IToolPanelColumnCompParams</code> instead.
            </li>
            <li><code>ExcelAlignment</code>: Legacy property <code>verticalText</code> - removed.</li>
            <li><code>ExcelFont</code>: Legacy property <code>charSet</code> - removed.</li>
            <li><code>ExcelStyle</code>: Legacy property <code>name</code> - removed.</li>
        </ul>
    </div>
</details>

{/* ------------------------------------------------- */}

<Heading level="2" id="deprecations">Deprecations</Heading>
<div
    data-meta="[&amp;quot;ModuleRegistry.register&amp;quot;,&amp;quot;MenuModule&amp;quot;,&amp;quot;RangeSelectionModule&amp;quot;,&amp;quot;Column.isHovered&amp;quot;,&amp;quot;deselectAllFiltered&amp;quot;,&amp;quot;deselectAllOnCurrentPage&amp;quot;,&amp;quot;selectAllFiltered&amp;quot;,&amp;quot;selectAllOnCurrentPage&amp;quot;,&amp;quot;cellRendererParams.checkbox&amp;quot;,&amp;quot;gridOptions.sortingOrder&amp;quot;,&amp;quot;gridOptions.unSortIcon&amp;quot;,&amp;quot;groupRemoveLowestSingleChildren&amp;quot;,&amp;quot;groupRemoveSingleChildren&amp;quot;,&amp;quot;suppressMakeColumnVisibleAfterUnGroup&amp;quot;,&amp;quot;suppressPropertyNamesCheck&amp;quot;,&amp;quot;suppressRowGroupHidesColumns&amp;quot;,&amp;quot;childIndex&amp;quot;,&amp;quot;firstChild&amp;quot;,&amp;quot;lastChild&amp;quot;,&amp;quot;childIndexChanged&amp;quot;,&amp;quot;firstChildChanged&amp;quot;,&amp;quot;lastChildChanged&amp;quot;,&amp;quot;smallDown&amp;quot;,&amp;quot;smallLeft&amp;quot;,&amp;quot;smallRight&amp;quot;]">
</div>

<details class={styles.details}>
    <summary class:list={[styles.summary, 'button-secondary' ]}>Deprecations
        <Icon svgClasses={styles.summaryChevron} name="chevronRight" />
    </summary>

    <div class={styles.detailsInner}>

        <Heading level="3" id="modules"> Modules</Heading>
        <div
            data-meta="[&amp;quot;ModuleRegistry.register&amp;quot;,&amp;quot;MenuModule&amp;quot;,&amp;quot;RangeSelectionModule&amp;quot;]">
        </div>
        <ul>
            <li><code>ModuleRegistry.register(module)</code> - deprecated, use
                <code>ModuleRegistry.registerModules([module])</code> instead.
            </li>
            <li><code>MenuModule</code> - deprecated, use <code>ColumnMenuModule</code> for the Column Menu and/or
                <code>ContextMenuModule</code> for the Context Menu instead.
            </li>
            <li><code>RangeSelectionModule</code> - deprecated, use <code>CellSelectionModule</code> instead.</li>
        </ul>

        <Heading level="3" id="column-object"> Column Object</Heading>
        <div data-meta="[&amp;quot;Column.isHovered&amp;quot;]">
        </div>
        <ul>
            <li><code>Column.isHovered()</code> - deprecated, use <code>api.isColumnHovered(column)</code> instead.</li>
        </ul>

        <Heading level="3" id="grid-api"> Grid API</Heading>
        <div
            data-meta="[&amp;quot;deselectAllFiltered&amp;quot;,&amp;quot;deselectAllOnCurrentPage&amp;quot;,&amp;quot;selectAllFiltered&amp;quot;,&amp;quot;selectAllOnCurrentPage&amp;quot;]">
        </div>
        <ul>
            <li><code>deselectAllFiltered</code> - deprecated, use <code>deselectAll('filtered')</code> instead.</li>
            <li><code>deselectAllOnCurrentPage</code> - deprecated, use <code>deselectAll('currentPage')</code> instead.
            </li>
            <li><code>selectAllFiltered</code> - deprecated, use <code>selectAll('filtered')</code> instead.</li>
            <li><code>selectAllOnCurrentPage</code> - deprecated, use <code>selectAll('currentPage')</code> instead.
            </li>
        </ul>

        <Heading level="3" id="grid-options"> Grid Options</Heading>
        <div
            data-meta="[&amp;quot;cellRendererParams.checkbox&amp;quot;,&amp;quot;gridOptions.sortingOrder&amp;quot;,&amp;quot;gridOptions.unSortIcon&amp;quot;,&amp;quot;groupRemoveLowestSingleChildren&amp;quot;,&amp;quot;groupRemoveSingleChildren&amp;quot;,&amp;quot;suppressMakeColumnVisibleAfterUnGroup&amp;quot;,&amp;quot;suppressPropertyNamesCheck&amp;quot;,&amp;quot;suppressRowGroupHidesColumns&amp;quot;]">
        </div>
        <ul>
            <li><code>cellRendererParams.checkbox</code> - deprecated, use
                <code>rowSelection.checkboxLocation = "autoGroupColumn"</code> instead.
            </li>
            <li><code>gridOptions.sortingOrder</code> - deprecated, use <code>defaultColDef.sortingOrder</code> instead.
            </li>
            <li><code>gridOptions.unSortIcon</code> - deprecated, use <code>defaultColDef.unSortIcon</code> instead.
            </li>
            <li><code>groupRemoveLowestSingleChildren</code> - deprecated, use
                <code>groupHideParentOfSingleChild: 'leafGroupsOnly'</code> instead.
            </li>
            <li><code>groupRemoveSingleChildren</code> - deprecated, use <code>groupHideParentOfSingleChild: true</code>
                instead.</li>
            <li><code>suppressMakeColumnVisibleAfterUnGroup</code> - deprecated, use
                <code>suppressGroupChangesColumnVisibility: "suppressShowOnUngroup"</code> instead.
            </li>
            <li><code>suppressPropertyNamesCheck</code> - deprecated without replacement. Previously used for adding
                user
                properties in <code>gridOptions</code> and <code>columnDefs</code>. Now, use the <code>context</code>
                property
                in both for storing arbitrary metadata.</li>
            <li><code>suppressRowGroupHidesColumns</code> - deprecated, use
                <code>suppressGroupChangesColumnVisibility: "suppressHideOnGroup"</code> instead.
            </li>
            <li>When setting both <code>suppressMakeColumnVisibleAfterUnGroup</code> and
                <code>suppressRowGroupHidesColumns</code> to <code>true</code>, use
                <code>suppressGroupChangesColumnVisibility: true</code> instead.
            </li>
        </ul>

        <Heading level="3" id="row-node"> Row Node</Heading>
        <div
            data-meta="[&amp;quot;childIndex&amp;quot;,&amp;quot;firstChild&amp;quot;,&amp;quot;lastChild&amp;quot;,&amp;quot;childIndexChanged&amp;quot;,&amp;quot;firstChildChanged&amp;quot;,&amp;quot;lastChildChanged&amp;quot;,&amp;quot;smallDown&amp;quot;,&amp;quot;smallLeft&amp;quot;,&amp;quot;smallRight&amp;quot;]">
        </div>
        <ul>
            <li><code>childIndex</code> - deprecated, use
                <code>rowNode.parent?.childrenAfterSort?.findIndex(r =&gt; r === rowNode)</code> instead.
            </li>
            <li><code>firstChild</code> - deprecated, use
                <code>rowNode.parent?.childrenAfterSort?.[0] === rowNode</code>
                instead.</li>
            <li><code>lastChild</code> - deprecated, use
                <code>!!rowNode.parent?.childrenAfterSort &amp;&amp; (rowNode.parent.childrenAfterSort[rowNode.parent.childrenAfterSort.length - 1] === rowNode)</code>
                instead.
            </li>
        </ul>

        <Heading level="3" id="row-node-events"> Row Node Events</Heading>
        <div
            data-meta="[&amp;quot;childIndexChanged&amp;quot;,&amp;quot;firstChildChanged&amp;quot;,&amp;quot;lastChildChanged&amp;quot;]">
        </div>
        <ul>
            <li><code>childIndexChanged</code> - deprecated, use the global <code>modelUpdated</code> event to determine
                when
                row children have changed.</li>
            <li><code>firstChildChanged</code> - deprecated, use the global <code>modelUpdated</code> event to determine
                when
                row children have changed.</li>
            <li><code>lastChildChanged</code> - deprecated, use the global <code>modelUpdated</code> event to determine
                when row
                children have changed.</li>
        </ul>

        <Heading level="3" id="theming-custom-icons"> Theming Custom Icons</Heading>
        <div data-meta="[&amp;quot;smallDown&amp;quot;,&amp;quot;smallLeft&amp;quot;,&amp;quot;smallRight&amp;quot;]">
        </div>
        <ul>
            <li><code>smallDown</code> - deprecated, use:<ul>
                    <li><code>advancedFilterBuilderSelect</code> for Advanced Filter Builder dropdown.</li>
                    <li><code>selectOpen</code> for Select cell editor and dropdowns (e.g., Integrated Charts menu).
                    </li>
                    <li><code>richSelectOpen</code> for Rich Select cell editor.</li>
                </ul>
            </li>
            <li><code>smallLeft</code> - deprecated, use:<ul>
                    <li><code>panelDelimiterRtl</code> for Row Group Panel / Pivot Panel.</li>
                    <li><code>subMenuOpenRtl</code> for sub-menus.</li>
                </ul>
            </li>
            <li><code>smallRight</code> - deprecated, use:<ul>
                    <li><code>panelDelimiter</code> for Row Group Panel / Pivot Panel.</li>
                    <li><code>subMenuOpen</code> for sub-menus.</li>
                </ul>
            </li>
        </ul>
    </div>
</details>